# YAML file to be used with VSTS CI. The orchestration of build app, test app, and 
# create docker image happens through the steps defined here.
# See http://docs.microsoft.com/vsts/pipelines/languages/docker for more information
variables:
  buildConfiguration: 'Release'

steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '**/*[Tt]ests/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      arguments: '--configuration $(buildConfiguration) --output out'
      zipAfterPublish: false

  - task: Docker@0
    displayName: Build an image
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'Adventworks DockerHub'   # change this to the name of your DockerHub service connection

  - task: Docker@0
    displayName: Push an image
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: 'Adventworks DockerHub'   # change this to the name of your DockerHub service connection
      action: 'Push an image'
  
  - script: |
      docker-compose -f docs/docker-compose.yml --project-directory . -p docs up -d |
      docker wait docs_sut_1 |
      docker-compose -f docs/docker-compose.yml --project-directory . down